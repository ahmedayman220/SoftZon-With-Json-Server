{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/employees'; // Base URL for API endpoint\n  }\n  // Get all employees\n  getAllEmployees() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  // Get employee by ID\n  getEmployeeById(empId) {\n    return this.http.get(`${this.baseUrl}/${empId}`);\n  }\n  // Add new employee\n  addEmployee(employeeData) {\n    return this.http.post(`${this.baseUrl}`, employeeData);\n  }\n  // Edit existing employee\n  editEmployee(empId, employeeData) {\n    const url = `${this.baseUrl}/${empId}`;\n    return this.http.put(url, employeeData);\n  }\n  // Delete employee by ID\n  deleteEmployeeById(empId) {\n    return this.http.delete(`${this.baseUrl}/${empId}`);\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["EmployeeService","constructor","http","baseUrl","getAllEmployees","get","getEmployeeById","empId","addEmployee","employeeData","post","editEmployee","url","put","deleteEmployeeById","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/Github/SoftZon-With-Json-Server/src/app/service/employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseUrl = 'http://localhost:3000/employees'; // Base URL for API endpoint\n\n  constructor(private http: HttpClient) {}\n\n  // Get all employees\n  getAllEmployees(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n\n  // Get employee by ID\n  getEmployeeById(empId: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${empId}`);\n  }\n\n  // Add new employee\n  addEmployee(employeeData: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, employeeData);\n  }\n\n  // Edit existing employee\n  editEmployee(empId: number,employeeData: any): Observable<any> {\n    const url = `${this.baseUrl}/${empId}`;\n    return this.http.put(url, employeeData);\n  }\n\n  // Delete employee by ID\n  deleteEmployeeById(empId: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${empId}`);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,iCAAiC,CAAC,CAAC;EAEd;EAEvC;EACAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACzC;EAEA;EACAG,eAAeA,CAACC,KAAa;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,IAAII,KAAK,EAAE,CAAC;EAClD;EAEA;EACAC,WAAWA,CAACC,YAAiB;IAC3B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,EAAE,EAAEM,YAAY,CAAC;EACxD;EAEA;EACAE,YAAYA,CAACJ,KAAa,EAACE,YAAiB;IAC1C,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACT,OAAO,IAAII,KAAK,EAAE;IACtC,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAACD,GAAG,EAAEH,YAAY,CAAC;EACzC;EAEA;EACAK,kBAAkBA,CAACP,KAAa;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAII,KAAK,EAAE,CAAC;EACrD;;AA9BWP,eAAe,C;mBAAfA,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfnB,eAAe,C;SAAfA,eAAe;EAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}